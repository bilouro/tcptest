Only in .: __init__.pyc
diff -ur /usr/ports/net/py-pcs/work/pcs-0.5/pcs/packets/ipv4.py ./packets/ipv4.py
--- /usr/ports/net/py-pcs/work/pcs-0.5/pcs/packets/ipv4.py	2007-01-19 08:10:07.000000000 +0000
+++ ./packets/ipv4.py	2008-08-05 02:27:12.000000000 +0000
@@ -39,6 +39,8 @@
 
 import udp, tcp, icmpv4
 import struct
+import inspect
+import time
 
 class ipv4(pcs.Packet):
 
@@ -119,3 +121,38 @@
         total += total >> 16
         return ~total
 
+
+
+
+
+
+#
+# Convenience object for higher level protocols that need a fake IPv4
+# header to calculate a checksum.
+
+class pseudoipv4(pcs.Packet):
+    """IPv4 Pseudo Header"""
+
+    _layout = pcs.Layout()
+    _map = None
+
+    def __init__(self, bytes = None, timestamp = None):
+        """For a pseudo header we only need the source and destination ddresses."""
+        from socket import IPPROTO_TCP
+        src = pcs.Field("src", 32)
+        dst = pcs.Field("dst", 32)
+        reserved = pcs.Field("reserved", 8, default = 0)
+        protocol = pcs.Field("protocol", 8, default = IPPROTO_TCP)
+        length = pcs.Field("length", 16)
+        pcs.Packet.__init__(self, [src, dst, reserved, protocol, length],
+                            bytes = bytes)
+        # Description MUST be set after the PCS layer init
+        self.description = inspect.getdoc(self)
+        if timestamp == None:
+            self.timestamp = time.time()
+        else:
+            self.timestamp = timestamp
+
+        self.data = None
+
+
diff -ur /usr/ports/net/py-pcs/work/pcs-0.5/pcs/packets/tcp.py ./packets/tcp.py
--- /usr/ports/net/py-pcs/work/pcs-0.5/pcs/packets/tcp.py	2007-01-19 08:10:07.000000000 +0000
+++ ./packets/tcp.py	2008-08-05 02:27:12.000000000 +0000
@@ -74,8 +74,9 @@
         """Walk the entire packet and pretty print the values of the fields.  Addresses are printed if and only if they are set and not 0."""
         retval = ""
         for field in self.layout:
-            if (field.type == str):
-                retval += "%s %s\n" % (field.name, self.__dict__[field.name])
-            else:
-                retval += "%s %d\n" % (field.name, self.__dict__[field.name])
+            retval += "%s %d\n" % (field.name, self.__dict__[field.name])
+            #if (field.type == str):
+            #    retval += "%s %s\n" % (field.name, self.__dict__[field.name])
+            #else:
+            #    retval += "%s %d\n" % (field.name, self.__dict__[field.name])
         return retval
diff -ur /usr/ports/net/py-pcs/work/pcs-0.5/pcs/pcap/pcap.c ./pcap/pcap.c
--- /usr/ports/net/py-pcs/work/pcs-0.5/pcs/pcap/pcap.c	2008-07-09 17:36:53.000000000 +0000
+++ ./pcap/pcap.c	2008-08-05 02:27:13.000000000 +0000
@@ -1,4 +1,4 @@
-/* Generated by Pyrex 0.9.6.2 on Wed Jul  9 17:36:53 2008 */
+/* Generated by Pyrex 0.9.6.2 on Sun May 25 23:12:06 2008 */
 
 #define PY_SSIZE_T_CLEAN
 #include "Python.h"
Only in .: pcs.patch
